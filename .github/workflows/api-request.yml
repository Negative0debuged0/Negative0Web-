name: Update Gist with Messages

on:
  workflow_dispatch:  # Manual trigger

jobs:
  update-gist:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch current chat.json from the Gist
        id: fetch-gist
        run: |
          GIST_ID="6686b37f704607d66c455ceefef7fec6"  # Replace with your Gist ID
          GITHUB_TOKEN="${{ secrets.GH_TOKEN }}"
          
          # Fetch the Gist content from GitHub API
          GIST_CONTENT=$(curl -s \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/gists/$GIST_ID")
          
          # Extract the content of the chat.json file from the Gist
          echo "$GIST_CONTENT" > gist_content.json
          FILE_CONTENT=$(echo "$GIST_CONTENT" | jq -r '.files["chat.json"].content')

          echo "chat.json content fetched from Gist: $FILE_CONTENT"

          # Store the extracted content for use later in the workflow
          echo "CONTENT=$FILE_CONTENT" >> $GITHUB_ENV

      - name: Update chat.json in the Gist
        run: |
          # New message you want to append (e.g., from frontend or a new input)
          NEW_MESSAGE="{
            \"sender\": \"John Doe\",
            \"text\": \"This is a new message\",
            \"timestamp\": \"$(date --utc +%Y-%m-%dT%H:%M:%SZ)\",
            \"reactions\": {}
          }"

          # Merge the new message with the existing content
          UPDATED_CONTENT=$(echo "$CONTENT" | jq --argjson newMessage "$NEW_MESSAGE" '.messages += [$newMessage]')

          # Send the updated content back to the Gist
          curl -X PATCH \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -d @- <<EOF
          {
            "files": {
              "chat.json": {
                "content": "$UPDATED_CONTENT"
              }
            }
          }
          EOF

          echo "Updated chat.json in the Gist successfully"
